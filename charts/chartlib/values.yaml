# Default values for kreutzer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  kubeVersion: ""
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

replicaCount: 1

kubeVersion: ""

clusterDomain: cluster.local

commonAnnotations: {}

commonLabels: {}

diagnosticMode:
  enabled: false

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

#externalURL: https://core.mydomain.com

#internalTLS:
#  enabled: false
#  tlsSecret: ""

#ipFamily:
#  ipv4:
#    enabled: true
#  ipv6:
#    enabled: true

# Exposure type.
#   - ingress (*)
#   - proxy
exposureType: ingress

service:
  type: ClusterIP
  port: 80

proxy:
  httpProxy: ""
  httpsProxy: ""
  noProxy: ""
  components:
    - ""

ingress:
  core:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$1
    hosts:
      - host: core.domain.com
        paths:
          - path: /api/v1/(.*)
            pathType: ImplementationSpecific
#        backend:
#          service:
#            name: core
#            port:
#              number: 8080
  portal:
    hosts:
      - host: core.domain.com
        paths:
          - path: /
            pathType: ImplementationSpecific


persistence:
  enabled: true
  resourcePolicy: 'keep'
  persistentVolumeClaim: {}
  accessModes:
    - ReadOnlyMany

volumePermissions:
  enabled: false

components:
  portal:
    # Type of workload:
    #   - `deployment`
    #   - `statefulset`
    #   - `daemonset`
    #   - `pod`
    type: deployment
    image:
      registry: docker.io
      repository: nginx
      tag: latest
      digest: ""
      pullPolicy: IfNotPresent
      pullSecrets: []
    command: []
    args: []
    containerPorts: {}
    replicas: 1

    # Container sidecars.
    sidecars:
      # Use predefined sidecars given by name.
      predefined: []

  database:
    type: statefulset


debug: false